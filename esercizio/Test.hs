import System.IO ( stdin, hGetContents )
import System.Environment ( getArgs, getProgName )
import System.Exit ( exitFailure, exitSuccess )

import LexGrammar
import ParGrammar
import SkelGrammar
import AbsGrammar
import TypeChecking
import Type
import TACGen

import ErrM
import Data.Map

testFiles = Prelude.map (\x -> "testcases/" ++ (show x)) ([0..((length testResults)-1)])

main :: IO ()
main = mapM_ runTest (zip testFiles testResults)

runTest :: (FilePath, String) -> IO ()
runTest (f,r) = readFile f >>= execTest f r

execTest :: String -> String -> String -> IO()
execTest f r p = case (pProgram (myLexer p)) of
  Bad _ -> putStrLn "parsing error"
  Ok tree ->
    let typed = (computeProgram tree initialEnv) in
      case typed of
        Prog (Errs strs) _ ->
          let errOut = (Prelude.foldl (\x y -> x ++ "\n" ++ y) (head strs) (tail strs)) in
            if (errOut == r)
              then
                putStrLn "OK"
              else
                (putStrLn $ "Fail: " ++ f)   
        _ ->
          let tac = (getTAC (getTACFromProgram typed)) in
            let tacstr = Prelude.foldl (\x y -> x ++ "\n" ++ (show y)) (show (head tac)) (tail tac) in
              if (tacstr == r)
                then
                  putStrLn "OK"
                else
                  (putStrLn $ "Fail: " ++ f)


-- Initial environment
initialEnv = fromList [ (compStrCall, [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer, TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Int) dimInt]), ("writeInt", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_Int) (Pn 0 1 1) Modality1 "" dimInt, TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Void) dimVoid]), ("writeChar", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_Char) (Pn 0 1 1) Modality1 "" dimChar, TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Void) dimVoid]), ("writeFloat", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_Float64) (Pn 0 1 1) Modality1 "" dimFloat64, TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Void) dimVoid]), ("writeString", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer, TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Void) dimVoid]), ("readInt", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Int) dimInt]), ("readFloat", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Float64) dimFloat64]), ("readChar", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_Char) dimChar]), ("readString", [Fun (Pn 0 1 1) [TypeChecking.Param (SimpTyp T_String) (Pn 0 1 1) Modality1 "" dimPointer] (SimpTyp T_String) dimPointer])]


testResults = ["# static data\nstr15:\n\t\"a\"\nstr16:\n\t\"b\"\nstr9:\n\t\"qwerty\"\n# text\n\tx@2,5 =int 5\nL6:\n\tg@3,5 =float64 7.8\nL5:\n\ty@4,5 =char 'w'\nL4:\n\tar@5,5[0] =int 1\n\tar@5,5[4] =int 2\n\tar@5,5[8] =int 3\n\tar@5,5[12] =int 4\n\tar@5,5[16] =int 5\n\tar@5,5[20] =int 6\nL3:\n\tt8 =addr &x@2,5\n\tkk@6,5 =addr t8\nL2:\n\tsty@7,5 =addr str9\nL1:\n\tt13 =addr &x@2,5\n\ty@9,5 =addr t13\nL11:\n\tt14 =addr &y@9,5\n\tz@10,5 =addr t14\nL10:\n\ts@11,5[0] =addr str15\n\ts@11,5[8] =addr str16\nL0:\n\texit\n# functions",
  "not numeric type at pos line 3, column 9",
  "# static data\n# text\n\tguard@2,5 =boolean true\nL2:\n\tx@3,5 =int 5\nL1:\n\tifFalse guard@2,5 goto L0\n\tt5 =int x@3,5 add_int 4\n\tx@3,5 =int t5\nL0:\n\texit\n# functions",
  "# static data\n# text\n\tx@2,5 =int 10\nL1:\n\tgoto L3\nL4:\n\tt8 =int x@2,5\n\tt9 =int x@2,5 add_int 1\n\tx@2,5 =int t9\nL3:\n\tt5 =int x@2,5 mod_int 5\n\tif t5 neq_int 4 goto L4\nL0:\n\texit\n# functions",
  "# static data\n# text\n\tx@3,7 =float64 12.56\nL3:\n\tt7 =float64 IntToFloat 20\n\tifFalse x@3,7 gt_float t7 goto L5\n\ty@5,9 =boolean true\n\tgoto L1\nL5:\n\ty@7,9 =boolean false\nL1:\n\tx@11,7 =boolean true\nL8:\n\tifFalse x@11,7 goto L10\n\tt12 =boolean x@11,7 and false\n\tx@11,7 =boolean t12\n\tgoto L0\nL10:\n\tt14 =boolean x@11,7 or true\n\tx@11,7 =boolean t14\nL0:\n\texit\n# functions",
  "type boolean in line 4, column 7 not compatible with type int in line 4, column 4",
  "type char in line 3, column 8 not compatible with expected type boolean",
  "# static data\n# text\n\tx@2,6 =int 0\nL3:\n\ty@3,6[0] =int 1\n\ty@3,6[4] =int 2\n\ty@3,6[8] =int 3\n\ty@3,6[12] =int 4\n\ty@3,6[16] =int 5\nL2:\n\tz@4,6 =int 0\nL1:\n\tgoto L5\nL6:\n\tt14 =int x@2,6 mul_int 4\n\tt15 =int y@3,6[t14]\n\tt13 =int z@4,6 mul_int t15\n\tz@4,6 =int t13\nL10:\n\tt20 =int x@2,6 mul_int 4\n\ty@3,6[t20] =int z@4,6\nL9:\n\tt24 =int x@2,6 add_int 1\n\tt25 =int x@2,6 add_int 1\n\tx@2,6 =int t25\nL5:\n\tif x@2,6 lt_int 5 goto L6\nL0:\n\texit\n# functions",
  "# static data\n# text\n\tx@2,6 =int 1\nL3:\n\ty@3,6 =int 56\nL2:\n\tgoto L5\nL6:\n\tgoto L11\nL12:\n\tt18 =int y@3,6 sub_int 1\n\tt19 =int y@3,6 sub_int 1\n\ty@3,6 =int t19\nL16:\n\tt21 =int x@2,6 add_int 3\n\tx@2,6 =int t21\nL15:\n\tgoto L5\nL11:\n\tif y@3,6 gt_int 37 goto L12\nL5:\n\tt7 =int x@2,6 mul_int 2\n\tt8 =int x@2,6 add_int t7\n\tif t8 lte_int 37 goto L6\nL1:\n\tc@11,6 =float64 4.4\nL0:\n\texit\n# functions",
  "# static data\n# text\n\tx@2,6 =int 5\nL2:\n\tx@4,7 =boolean true\nL4:\n\tt7 =boolean x@4,7 and true\n\tx@4,7 =boolean t7\nL1:\n\tt8 =int x@2,6\n\tt9 =int x@2,6 add_int 1\n\tx@2,6 =int t9\nL0:\n\texit\n# functions",
  "# static data\nstr6:\n\t\"qwe\"\nstr4:\n\t\"qwerty\"\n# text\n\tx@2,5 =addr str4\nL2:\n\tf@3,5 =int 2\nL1:\n\tparam x@2,5_addr\n\tparam str6_addr\n\tt9 =int call mine$strcmp@1,1:2\n\tifFalse t9 eq_int 0 goto L0\n\tgoto L10\nL11:\n\tifFalse f@3,5 lt_int 200 goto L12\n\tt16 =int f@3,5 pow_int 2\n\tf@3,5 =int t16\n\tgoto L10\nL12:\n\tgoto L0\nL10:\n\tgoto L11\nL0:\n\texit\n# functions",
  "# static data\n# text\n\th@2,6 =int 6\nL4:\n\tt@3,6 =int 8\nL3:\n\tt6 =addr &h@2,6\n\ty@4,6 =addr t6\nL2:\n\tt7 =addr &t@3,6\n\tz@5,6 =addr t7\nL1:\n\tt8 =int *y@4,6\n\tt9 =int *z@5,6\n\tt10 =int t8 add_int t9\n\tc@6,6 =int t10\nL0:\n\texit\n# functions",
  "type array[float64] not compatible with type array[int] at line 2, column 17\nvariable x used in line 3, column 2 is undeclared\nvariable x used in line 4, column 2 is undeclared\ncannot assign an array to a variable at line 7, column 21\ncould not determine array size at line 7, column 9",
  "# static data\n# text\n\tx@2,6 =int 5\nL4:\n\ty@3,6 =boolean false\nL3:\n\tif x@2,6 lte_int 5 goto L8\n\tgoto L9\nL8:\n\tt11 =boolean true\n\tgoto L10\nL9:\n\tt11 =boolean false\nL10:\n\tt7 =boolean y@3,6 and t11\n\ty@3,6 =boolean t7\nL2:\n\tif y@3,6 goto L14\n\tifFalse x@2,6 lt_int 6 goto L1\nL14:\n\tx@6,8 =int 9\nL1:\n\tt18 =int x@2,6\n\tt19 =int x@2,6 sub_int 1\n\tx@2,6 =int t19\nL0:\n\texit\n# functions",
  "not numeric type at pos line 9, column 13",
  "# static data\nstr5:\n\t\"be\"\nstr17:\nstr11:\n\t\"fail\"\nstr12:\n\t\"s\"\n# text\n\tx@2,7 =int 4\nL3:\n\ty@3,7 =addr str5\nL2:\nL1:\n\tparam x@2,7_int\n\tparam y@3,7_addr\n\tt16 =addr call foo@4,7:2\n\tparam t16_addr\n\tparam str17_addr\n\tt20 =int call mine$strcmp@1,1:2\n\tifFalse t20 eq_int 0 goto L0\n\tz@13,9 =int 17\nL0:\n\texit\n# functions\nfoo@4,7:\n# code of foo@4,7\n\tifFalse x@4,11 gt_int 6 goto L8\n\treturn_addr y@4,18\n\tgoto L6\nL8:\n\treturn_addr str11\nL6:\n\treturn_addr str12\nerror \"control of function foo@4,7 should not reach this point.\"",
  "# static data\n# text\nL4:\n\ta@5,5 =int 1\nL3:\n\tb@6,5 =int 2\nL2:\n\tc@7,5 =int 3\nL1:\n\tt9 =addr &a@5,5\n\tparam t9_addr\n\tt10 =addr &b@6,5\n\tparam t10_addr\n\tparam c@7,5_int\n\tt14 =int call x@2,13:3\n\tres@8,5 =int t14\nL0:\n\texit\n# functions\nx@2,13:\n# init\n\ty@2,22$valres =int *y@2,22\n# code of x@2,13\n\tt6 =int *z@2,34\n\tt7 =int y@2,22$valres mul_int t6\n\tt8 =int t7 mul_int w@2,43\n# postamble\n\t*y@2,22 =int y@2,22$valres\n\treturn_int t8\n# postamble\n\t*y@2,22 =int y@2,22$valres\nerror \"control of function x@2,13 should not reach this point.\"",
  "cannot use different parameters with the same formal name at line 3, column 3",
  "# static data\n# text\n\tx@3,5 =int 4\nL4:\n\ty@4,5[0] =int 1\n\ty@4,5[4] =int 5\nL3:\n\tt6 =addr &y@4,5\n\tz@5,5 =addr t6\nL2:\nL1:\n\tparam z@5,5_addr\n\tt24 =float64 call foo@7,5:1\n\tl@14,7 =float64 t24\nL0:\n\texit\n# functions\nfoo@7,5:\n# code of foo@7,5\n\tu@8,7 =float64 0.0\nL9:\n\tt17 =addr *c@7,13\n\tif 0 lt_int 0 goto L15\n\tif 0 lt_int 2 goto L16\nL15:\nerror \"array index out of bounds at line 9, column 11\"\nL16:\n\tt13 =int 0 mul_int 4\n\tt14 =int t17[t13]\n\tt18 =int t14 mod_int x@3,5\n\tt11 =float64 IntToFloat t18\n\tu@8,7 =float64 t11\nL8:\n\tt20 =int x@3,5 add_int 4\n\tx@3,5 =int t20\nL7:\n\tt22 =float64 IntToFloat x@3,5\n\tt21 =float64 u@8,7 div_float t22\n\treturn_float64 t21\nerror \"control of function foo@7,5 should not reach this point.\"",
  "# static data\nstr7:\n\t\"qwe\"\nstr8:\n\t\"rte\"\n# text\n\tk@2,6 =addr str7\nL5:\n\tl@3,6 =addr str8\nL4:\n\tt9 =addr &k@2,6\n\tf@4,6 =addr t9\nL3:\n\tt10 =addr &l@3,6\n\tv@5,6 =addr t10\nL2:\n\tparam l@3,6_addr\n\tparam k@2,6_addr\n\tt15 =int call mine$strcmp@1,1:2\n\tifFalse t15 neq_int 0 goto L11\n\tt18 =addr &v@5,6\n\tparam t18_addr\n\tt19 =addr &f@4,6\n\tparam t19_addr\n\tt22 =addr call foo@13,6:2\n\tk@2,6 =addr t22\n\tgoto L1\nL11:\n\tt25 =addr &f@4,6\n\tparam t25_addr\n\tt26 =addr &v@5,6\n\tparam t26_addr\n\tt29 =addr call foo@13,6:2\n\tl@3,6 =addr t29\nL1:\nL0:\n\texit\n# functions\nfoo@13,6:\n# init\n\ta@13,17$valres =addr *a@13,17\n# code of foo@13,6\n\tv@14,9 =int 5\nL31:\n\tgoto L33\nL34:\n\tt37 =int v@14,9 mod_int 4\n\tifFalse t37 eq_int 0 goto L33\n\tgoto L30\nL33:\n\tif v@14,9 lte_int 9 goto L34\nL30:\n\tt40 =addr *a@13,17$valres\n# postamble\n\t*a@13,17 =addr a@13,17$valres\n\treturn_addr t40\n# postamble\n\t*a@13,17 =addr a@13,17$valres\nerror \"control of function foo@13,6 should not reach this point.\"",
  "cannot use simple type with valres modality at line 6, column 6\ncannot use simple type with ref modality at line 7, column 8",
  "not sure if returned pointer points to a global variable at line 6, column 3",
  "# static data\n# text\n\tx@2,5 =int 1\nL4:\n\tt6 =addr &x@2,5\n\tv@3,5 =addr t6\nL3:\n\tk@4,5[0] =addr v@3,5\n\tk@4,5[8] =addr v@3,5\nL2:\nL1:\n\tt37 =addr k@4,5[0]\n\tparam t37_addr\n\tt36 =addr k@4,5[8]\n\tparam t36_addr\n\tt38 =int call foo@5,5:2\n\tc@14,5 =int t38\nL0:\n\texit\n# functions\nfoo@5,5:\n# code of foo@5,5\n\tr@6,5 =int 0\nL8:\n\tif 0 lt_int 0 goto L13\n\tif 0 lt_int 2 goto L14\nL13:\nerror \"array index out of bounds at line 7, column 5\"\nL14:\n\tt11 =int 0 mul_int 8\n\tt12 =addr b@5,9[t11]\n\tif 1 lt_int 0 goto L17\n\tif 1 lt_int 2 goto L18\nL17:\nerror \"array index out of bounds at line 7, column 13\"\nL18:\n\tt15 =int 1 mul_int 8\n\tt16 =addr b@5,9[t15]\n\tifFalse t12 eq_long t16 goto L10\n\tif 1 lt_int 0 goto L26\n\tif 1 lt_int 2 goto L27\nL26:\nerror \"array index out of bounds at line 8, column 9\"\nL27:\n\tt24 =int 1 mul_int 8\n\tt25 =addr b@5,9[t24]\n\tt23 =int *t25\n\tt22 =int r@6,5 add_int t23\n\tr@6,5 =int t22\n\tgoto L7\nL10:\n\tif 1 lt_int 0 goto L33\n\tif 1 lt_int 2 goto L34\nL33:\nerror \"array index out of bounds at line 10, column 9\"\nL34:\n\tt31 =int 1 mul_int 8\n\tt32 =addr b@5,9[t31]\n\tt30 =int *t32\n\tt29 =int r@6,5 mul_int t30\n\tr@6,5 =int t29\nL7:\n\treturn_int r@6,5\nerror \"control of function foo@5,5 should not reach this point.\"",
  "# static data\n# text\nL2:\nL1:\n\tcall foo@1,6:0\nL0:\n\texit\n# functions\nfoo@1,6:\n# code of foo@1,6\n\tcall foo2@5,5:0\nL4:\n\treturn_int 3\nerror \"control of function foo@1,6 should not reach this point.\"\nfoo2@5,5:\n# code of foo2@5,5\n\tcall foo@1,6:0\nL6:\n\treturn_int 3\nerror \"control of function foo2@5,5 should not reach this point.\"",
  "# static data\n# text\n\tx@2,5 =int 10\nL1:\nL0:\n\texit\n# functions\nfoo@4,5:\n# code of foo@4,5\n\tt3 =addr &x@2,5\n\treturn_addr t3\nerror \"control of function foo@4,5 should not reach this point.\"",
  "not sure if returned pointer points to a global variable at line 6, column 5",
  "# static data\n# text\n\tx@2,5 =int 10\nL3:\n\tt5 =addr &x@2,5\n\ty@3,5[0] =addr t5\nL2:\nL1:\nL0:\n\texit\n# functions\nfoo@5,5:\n# code of foo@5,5\n\tt6 =int 0 mul_int 8\n\tt7 =addr y@3,5[t6]\n\treturn_addr t7\nerror \"control of function foo@5,5 should not reach this point.\"\nfoo@6,5:\n# code of foo@6,5\n\tif 0 lt_int 0 goto L12\n\tif 0 lt_int 1 goto L13\nL12:\nerror \"array index out of bounds at line 6, column 35\"\nL13:\n\tt10 =int 0 mul_int 8\n\tt11 =addr z@6,9[t10]\n\treturn_addr t11\nerror \"control of function foo@6,5 should not reach this point.\"",
  "cannot assign a value to a constant at line 3, column 17",
  "# static data\n# text\n\tx@2,5 =int 20\nL2:\n\ty@3,5[0] =int x@2,5\nL1:\n\tt5 =int 0 mul_int 4\n\tt6 =int y@3,5[t5]\n\tt9 =int 0 mul_int 4\n\tt10 =int y@3,5[t9]\n\tt13 =int t10 pow_int 2\n\tt14 =int t6 add_int t13\n\tt15 =int 0 mul_int 4\n\tt16 =int y@3,5[t15]\n\tt19 =int x@2,5 add_int t16\n\tt20 =int t19\n\ti@4,5 =int t14\nL4:\n\tif i@4,5 gt_int t20 goto L23\n\tx@2,5 =int i@1,1\n\ti@4,5 =int i@4,5 add_int 1\n\tgoto L4\nL23:\nL0:\n\texit\n# functions",
  "# static data\n# text\n\tx@2,5[0] =int 1\nL2:\n\tt5 =int 0 mul_int 4\n\tt6 =int x@2,5[t5]\n\tt9 =int 200\n\ti@3,5 =int t6\nL4:\n\tif i@3,5 gt_int t9 goto L10\n\ti@3,5 =int i@3,5 add_int 1\n\tgoto L4\nL10:\nL1:\n\tt11 =int 0 mul_int 4\n\tt12 =int x@2,5[t11]\n\ty@4,5[0] =int t12\nL0:\n\texit\n# functions",
  "# static data\nstr4:\n\t\"Lorem\"\nstr18:\n\t\"adipisci\"\nstr12:\n\t\"amet\"\nstr17:\n\t\"consectetur\"\nstr23:\n\t\"elit\"\nstr5:\n\t\"ipsum\"\nstr28:\nstr24:\n\t\"sed\"\nstr11:\n\t\"sit\"\n# text\n\tparam str4_addr\n\tparam str5_addr\n\tt8 =int call mine$strcmp@1,1:2\n\tif t8 lt_int 0 goto L1\n\tparam str11_addr\n\tparam str12_addr\n\tt15 =int call mine$strcmp@1,1:2\n\tifFalse t15 gt_int 0 goto L9\n\tparam str17_addr\n\tparam str18_addr\n\tt21 =int call mine$strcmp@1,1:2\n\tif t21 gte_int 0 goto L1\nL9:\n\tparam str23_addr\n\tparam str24_addr\n\tt27 =int call mine$strcmp@1,1:2\n\tifFalse t27 lte_int 0 goto L0\nL1:\n\tx@3,13[0] =addr str28\nL0:\n\texit\n# functions",
  "# static data\nstr13:\n\t\"\"\nstr5:\nstr4:\n\t\"cc\"\nstr12:\n\t\"ss\"\n# text\n\tparam str4_addr\n\tparam str5_addr\n\tt8 =int call mine$strcmp@1,1:2\n\tifFalse t8 eq_int 0 goto L2\n\tif 3 gt_int 4 goto L1\n\tgoto L3\nL2:\n\tparam str12_addr\n\tparam str13_addr\n\tt16 =int call mine$strcmp@1,1:2\n\tif t16 lte_int 0 goto L1\nL3:\n\tx@3,13 =int 3\n\tgoto L0\nL1:\n\tg@5,13 =int 2\nL0:\n\texit\n# functions",
  "# static data\n# text\n\tx@2,5 =int 5\nL2:\n\ty@3,5 =int 1\nL1:\nL5:\n\tt11 =int x@2,5\n\tt12 =int x@2,5 add_int 1\n\tx@2,5 =int t12\nL9:\nL8:\n\tparam x@2,5_int\n\tt18 =int call foo@6,5:1\n\tt16 =int y@3,5 mul_int t18\n\ty@3,5 =int t16\nL4:\n\tif x@2,5 lte_int 67 goto L5\nL0:\n\texit\n# functions\nfoo@6,5:\n# code of foo@6,5\n\tt13 =int x@6,9 mul_int x@6,9\n\tt14 =int t13 add_int x@6,9\n\treturn_int t14\nerror \"control of function foo@6,5 should not reach this point.\"",
  "# static data\n# text\n\tx@3,5 =int 5\nL2:\nL1:\nL5:\n\tt10 =addr &x@3,5\n\tt@9,7 =addr t10\nL8:\n\tt11 =int *t@9,7\n\tparam t11_int\n\tt13 =int call foo@4,5:1\n\tm@10,7 =int t13\nL4:\n\tif x@3,5 neq_int 6 goto L5\nL0:\n\texit\n# functions\nfoo@4,5:\n# code of foo@4,5\n\treturn_int 5\nerror \"control of function foo@4,5 should not reach this point.\"",
  "# static data\nstr32:\n\t\"No sense\"\nstr5:\n\t\"stdin\"\nstr31:\n\t\"stdout\"\n# text\n\tparam str5_addr\n\tt7 =int call readInt@1,1:1\n\tx@3,5 =int t7\nL3:\n\tres@4,5 =float64 IntToFloat 0\nL2:\n\tt9 =int x@3,5 mod_int 5\n\tt8 =int t9\n\tifFalse t8 eq_int 1 goto L12\n\tt18 =float64 IntToFloat 100\n\tres@4,5 =float64 t18\nL16:\n\tgoto L1\nL12:\n\tifFalse t8 eq_int 2 goto L11\n\tt24 =float64 IntToFloat 120\n\tres@4,5 =float64 t24\nL22:\n\tgoto L1\nL11:\n\tifFalse t8 eq_int 3 goto L10\n\tparam str31_addr\n\tparam str32_addr\n\tcall writeString@1,1:2\nL29:\n\tt35 =float64 IntToFloat 90\n\tres@4,5 =float64 t35\nL28:\n\tgoto L1\nL10:\nL1:\n\tt41 =float64 IntToFloat 100\n\tifFalse res@4,5 lte_float t41 goto L37\n\tt39 =boolean true\n\tgoto L38\nL37:\n\tt39 =boolean false\nL38:\n\tok@14,5 =boolean t39\nL0:\n\texit\n# functions",
  "cannot assign an array to a variable at line 5, column 22\ncould not determine array size at line 5, column 9",
  "# static data\n# text\n\tx@2,7[0] =int 1\n\tx@2,7[4] =int 3\n\tx@2,7[8] =int 4\nL4:\nL3:\n\tt30 =int x@2,7[0]\n\tparam t30_int\n\tt29 =int x@2,7[4]\n\tparam t29_int\n\tt28 =int x@2,7[8]\n\tparam t28_int\n\tt31 =int call foo@3,7:3\n\th@10,5 =int t31\nL2:\n\ty@12,13[0] =char 'w'\n\ty@12,13[1] =char 'k'\n\ty@12,13[2] =char 'j'\n\ty@12,13[3] =char 'y'\nL1:\n\tif 1 lt_int 0 goto L38\n\tif 1 lt_int 2 goto L39\nL38:\nerror \"array index out of bounds at line 14, column 16\"\nL39:\n\tt36 =int 1 mul_int 2\n\tif 0 lt_int 0 goto L34\n\tif 0 lt_int 2 goto L35\nL34:\nerror \"array index out of bounds at line 14, column 19\"\nL35:\n\tt32 =int 0 mul_int 1\n\tt32 =int t32 add_int t36\n\tt33 =char y@12,13[t32]\n\tf@14,5 =char t33\nL0:\n\texit\n# functions\nfoo@3,7:\n# code of foo@3,7\n\tn@4,9 =addr b@3,13\nL8:\n\tt10 =int 5 mul_int 4\n\tt11 =int n@4,9[t10]\nL7:\n\tif 5 lt_int 0 goto L16\n\tif 5 lt_int 3 goto L17\nL16:\nerror \"array index out of bounds at line 6, column 6\"\nL17:\n\tt14 =int 5 mul_int 4\n\tt15 =int b@3,13[t14]\nL6:\n\tt18 =int 5 mul_int 4\n\tt19 =int n@4,9[t18]\n\tif 5 lt_int 0 goto L24\n\tif 5 lt_int 3 goto L25\nL24:\nerror \"array index out of bounds at line 7, column 20\"\nL25:\n\tt22 =int 5 mul_int 4\n\tt23 =int b@3,13[t22]\n\tt26 =int t19 add_int t23\n\treturn_int t26\nerror \"control of function foo@3,7 should not reach this point.\""]
